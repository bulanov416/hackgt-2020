{"version":3,"sources":["static/assets/loading_gif.gif","components/MenuItem.js","pages/Menu.js","components/CartItem.js","pages/Cart.js","pages/Checkout.js","pages/Dining.js","App.js","serviceWorker.js","models/MenuItemObject.js","components/Firebase.js","index.js"],"names":["module","exports","MenuItem","props","name","description","Card","Body","Row","style","Col","Title","Subtitle","className","Button","variant","Menu","items","menuItems","forEach","item","length","push","key","uuid","Container","class","src","loading","alt","CartItem","quantity","price","canDelete","hasQuantity","element","icon","faTrash","sm","xs","Badge","pill","Cart","Checkout","onSubmit","Alert","totalPrice","Form","Group","controlId","Label","Control","type","placeholder","onClick","Dining","size","block","App","database","useState","pageIndex","setPageIndex","Navbar","bg","expand","Brand","href","fixed","Boolean","window","location","hostname","match","MenuItemObject","category","this","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","children","firestore","setFirestore","setMenuItems","useEffect","menuItemsArray","firebase","initializeApp","collection","get","then","querySnapshot","doc","id","querySnapshot2","doc2","currentMenuItem","catch","error","console","log","childrenWithProps","React","Children","map","child","properties","isValidElement","cloneElement","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.497865a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading_gif.d452daac.gif\";","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from \"react-bootstrap/Card\";\n\nfunction MenuItem(props) {\n\n    const { name, description } = props;\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <Row style={{'width':'100%'}}>\n                        <Col>\n                            <Card.Title>{name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\"> { description } </Card.Subtitle>\n                        </Col>\n                        <Col style={{\"paddingRight\":\"0px\"}}>\n                            <Button variant={'outline-success'} className={\"float-right\"} style={{'marginTop':'7px'}}>+</Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nexport default MenuItem;\n","import React from \"react\";\n\nimport MenuItem from \"../components/MenuItem\";\nimport Container from \"react-bootstrap/Container\";\nimport loading from \"../static/assets/loading_gif.gif\";\n\nfunction Menu(props) {\n\n    const { items } = props;\n\n    const appetizerItems = [];\n    const entreeItems = [];\n    const sideItems = [];\n    const dessertItems = [];\n    const beverageItems = [];\n    const menuItems = [];\n\n    if (items != null) {\n        items.forEach((item) => { if (item.name.length != 0) {\n\n            menuItems.push(<MenuItem name={item.name} description={item.description} key={item.uuid}/>);\n        }});\n    }\n\n    return(\n        <Container style={{'padding':'50px'}}>\n            <h1 class=\"text-center\">Menu</h1>\n            <br></br>\n            {\n                (items != null) ? menuItems :\n                <div style={{'width': '100%', 'textAlign': 'center'}}>\n                    <img src={loading} style={{'width': '20px'}} alt='loading...'/>\n                </div>\n            }\n        </Container>\n    );\n}\n\nexport default Menu;\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from \"react-bootstrap/Card\";\nimport Badge from 'react-bootstrap/Badge'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nfunction CartItem(props) {\n\n    const { name, quantity, price, canDelete, hasQuantity } = props;\n    const element = <FontAwesomeIcon icon={faTrash} />\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <Row style={{'width':'100%'}}>\n                        <Col sm={1} xs={2}>\n                            <Card.Title className=\"mb-2 text-muted\">\n                                { hasQuantity &&\n                                <Badge pill variant=\"dark\"> { quantity } </Badge> \n                                }\n                            </Card.Title>\n                        </Col>\n                        <Col sm = {8} xs={6}>\n                            <Card.Title>{name}</Card.Title>\n                        </Col>\n                        <Col sm = {2} xs={3}>\n                            <Card.Title className=\"mb-2 text-muted\"> { price }</Card.Title>\n                        </Col>\n                        <Col sm= {1} style={{\"paddingRight\":\"0px\"}} xs={1}>\n                            { canDelete && \n                            <Button variant={'outline-danger'} className={\"float-right\"}>{element}</Button> \n                            }\n                            {/* <Button variant={'outline-success'} className={\"float-right\"} style={{'marginTop':'7px'}}>+</Button>  */}\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nexport default CartItem;\n","import React from \"react\";\n\nimport CartItem from \"../components/CartItem\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Cart() {\n    return(\n        <Container style={{'padding':'50px'}}>\n            <h1 class=\"text-center\">Cart</h1>\n            <br></br>\n            <CartItem name={\"Strawberries\"} quantity={\"x2\"} price={\"$2.50\"} canDelete hasQuantity/>\n            <CartItem name={\"Blackberries\"} quantity={\"x2\"} price={\"$2.50\"} canDelete hasQuantity/>\n            <CartItem name={\"Cherries\"} quantity={\"x2\"} price={\"$2.50\"} canDelete hasQuantity/>\n            {/*need to have total be something else --> not a cart item and need to add up total */}\n            <CartItem name={\"Total\"} price = {\"$15.00\"}/>\n        </Container>\n    );\n}\n\nexport default Cart;","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\n\nfunction Checkout(props) {\n\n    const {onSubmit} = props;\n\n    return(\n        <Container style={{'padding':'200px'}}>\n            <h1 class=\"text-center\">Checkout</h1>\n            <br></br>\n              <Alert variant=\"primary\">\n                Your total is ${props.totalPrice}\n              </Alert>\n            <Form>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name on Card</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Name\" />\n                </Form.Group>\n                <Form.Group controlId=\"cardNum\">\n                    <Form.Label>Card Number</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Card Number\" />\n                </Form.Group>\n                <Form.Group controlId=\"expire\">\n                    <Form.Label>Expiry Date</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"MM/YY\" />\n                </Form.Group>\n                <Form.Group controlId=\"code\">\n                    <Form.Label>Security Code</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"CVV\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\n                    Complete Payment\n                </Button>\n            </Form>\n        </Container>\n    );\n}\n\nexport default Checkout;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Dining() {\n    return(\n        <Container style={{'padding':'100px'}}>\n            <h1 class=\"text-center\">\n                Dining in Progress...\n            </h1>\n            <br></br><br></br>\n            <Button variant=\"primary\" size=\"lg\" block>\n                Request Refill\n            </Button>\n            <Button variant=\"secondary\" size=\"lg\" block>\n                Request Waiter\n            </Button>\n            <Button variant=\"primary\" size=\"lg\" block>\n                Order More\n            </Button>\n            <Button variant=\"secondary\" size=\"lg\" block>\n                Leave Restaurant\n            </Button>\n        </Container>\n    );\n}\n\nexport default Dining;\n\n","import React, { useState } from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Menu from './pages/Menu.js';\nimport Cart from './pages/Cart.js';\nimport Checkout from './pages/Checkout.js';\nimport Dining from './pages/Dining.js';\n\nfunction App(props) {\n\n    const { database, menuItems } = props;\n    const [ pageIndex, setPageIndex ] = useState(0);\n\n    return (\n        <div>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Welcome to Olive Garden!</Navbar.Brand>\n                <Button variant=\"outline-info\" onClick={() => {\n                    setPageIndex(1);\n                }}>View Cart</Button>\n                <Button variant=\"outline-info\" onClick={() => {\n                    setPageIndex(0);\n                }}>View Menu</Button>\n            </Navbar>\n            { pageIndex === 0 ? <Menu items = {menuItems} /> : <></>}\n            { pageIndex === 1 ? <Cart /> : <></>}\n            { pageIndex === 2 ? <Checkout onSubmit = {\n                () => {setPageIndex(3);}\n            } /> : <></>}\n            { pageIndex === 3 ? <Dining /> : <></>}\n            <Navbar fixed=\"bottom\" bg={\"light\"} expand={\"lg\"} style={{\"padding\":\"0px\", 'width':'100%'}}>\n                <Row className={\"justify-content-center\"} style={{\"width\":\"100%\"}}>\n                    <Col style={{\"paddingRight\":\"0px\"}}>\n                        { (pageIndex < 2) ? <Button size={'lg'} variant={\"success\"} style={{\"width\":\"105%\"}} onClick={() => {\n                            setPageIndex(pageIndex + 1);\n                        }}> Checkout </Button> : <></>}\n                    </Col>\n                </Row>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default class MenuItemObject {\n    constructor(category, name, description, uuid) {\n        this.category = category;\n        this.name = name;\n        this.description = description;\n        this.uuid = uuid;\n    }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport firebase from 'firebase';\nimport MenuItemObject from \"../models/MenuItemObject\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAUrlthvN7-mzjShK52AfthkX6yepCuwgk\",\n    authDomain: \"hackgt2020-5847e.firebaseapp.com\",\n    databaseURL: \"https://hackgt2020-5847e.firebaseio.com\",\n    projectId: \"hackgt2020-5847e\",\n    storageBucket: \"hackgt2020-5847e.appspot.com\",\n    messagingSenderId: \"838591600721\",\n    appId: \"1:838591600721:web:829023369df328b7a18070\"\n};\n\nfunction Firebase(props) {\n    const { children } = props;\n    const [ firestore, setFirestore ] = useState(null);\n    const [ menuItems, setMenuItems ] = useState(null);\n\n    useEffect(() => {\n        let menuItemsArray = [];\n        firebase.initializeApp(firebaseConfig);\n        const database = firebase.firestore();\n        setFirestore(database);\n        database.collection('restaurants').get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                let restaurantId = doc.id;\n                database.collection('restaurants').doc(doc.id).collection('menuItems').get().then(function(querySnapshot2) {\n                    querySnapshot2.forEach(function(doc2) {\n                        let category = doc2.get('Category');\n                        let description = doc2.get('Description');\n                        let name = doc2.get('Name');\n                        let uuid = doc2.id;\n                        let currentMenuItem = new MenuItemObject(category, name, description, uuid);\n                        menuItemsArray.push(currentMenuItem);\n                    });\n                    setMenuItems(menuItemsArray);\n                });\n            })\n        }).catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n    }, []);\n\n    const childrenWithProps = React.Children.map(children, child => {\n        // checking isValidElement is the safe way and avoids a typescript error too\n        const properties = { database: firestore, menuItems: menuItems };\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, properties);\n        }\n        return child;\n    });\n\n    return (\n        <div> { childrenWithProps } </div>\n    );\n}\n\nexport default Firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Cart from './pages/Cart';\nimport Checkout from './pages/Checkout'\nimport Dining from './pages/Dining'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Firebase from \"./components/Firebase\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Firebase>\n        <App />\n      </Firebase>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}