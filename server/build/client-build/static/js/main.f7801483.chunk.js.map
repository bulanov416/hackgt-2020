{"version":3,"sources":["static/assets/loading_gif.gif","components/MenuItem.js","pages/Menu.js","components/CartItem.js","pages/Cart.js","pages/Checkout.js","pages/Dining.js","App.js","serviceWorker.js","models/MenuItemObject.js","components/Firebase.js","index.js"],"names":["module","exports","MenuItem","props","name","description","price","Card","Body","Row","style","Col","sm","Title","Subtitle","className","Button","variant","onClick","cart","JSON","parse","sessionStorage","getItem","total","parseFloat","console","log","setItem","stringify","Menu","items","appetizerItems","entreeItems","sideItems","dessertItems","beverageItems","useEffect","forEach","item","category","push","key","uuid","Container","class","src","loading","alt","CartItem","quantity","canDelete","hasQuantity","element","icon","faTrash","xs","Badge","pill","Cart","wholeCart","cartItems","length","Checkout","onSubmit","Alert","totalPrice","Form","Group","controlId","Label","Control","type","placeholder","Dining","size","block","App","database","menuItems","useState","pageIndex","setPageIndex","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","data","currentURL","window","location","search","substring","collection","doc","set","orders","status","fixed","Boolean","hostname","match","MenuItemObject","this","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","children","firestore","setFirestore","setMenuItems","menuItemsArray","firebase","initializeApp","get","then","querySnapshot","querySnapshot2","doc2","currentMenuItem","catch","error","childrenWithProps","React","Children","map","child","properties","isValidElement","cloneElement","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f7801483.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading_gif.d452daac.gif\";","import React, { useEffect } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nfunction MenuItem(props) {\r\n\r\n    const { name, description, price } = props;\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Row style={{'width':'100%'}}>\r\n                        <Col sm = {7}>\r\n                            <Card.Title>{name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\"> { description } </Card.Subtitle>\r\n                        </Col>\r\n                        <Col sm = {4}>\r\n                            <Card.Title style={{\"textAlign\":\"right\", \"marginTop\":\"15px\"}}>${`${price}`}</Card.Title>\r\n                        </Col>\r\n                        <Col sm = {1} style={{\"paddingRight\":\"0px\"}}>\r\n                            <Button variant={'outline-success'} className={\"float-right\"} style={{'marginTop':'7px'}} onClick={() => {\r\n                                const cart = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n                                let total = parseFloat(sessionStorage.getItem(\"total\"));\r\n                                console.log(total);\r\n                                if (cart[name] != null) {\r\n                                    cart[name] = cart[name] + 1;\r\n                                } else {\r\n                                    cart[name] = 1;\r\n                                }\r\n                                if (total != null) {\r\n                                    total += parseFloat(price);\r\n                                } else {\r\n                                    total = parseFloat(price);\r\n                                }\r\n                                sessionStorage.setItem(\"cart\", JSON.stringify(cart));\r\n                                sessionStorage.setItem(\"total\", `${total}`);\r\n                            }}>+</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MenuItem;\r\n","import React, {useEffect} from \"react\";\r\n\r\nimport MenuItem from \"../components/MenuItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport loading from \"../static/assets/loading_gif.gif\";\r\n\r\nfunction Menu(props) {\r\n\r\n    const { items } = props;\r\n\r\n    const appetizerItems = [];\r\n    const entreeItems = [];\r\n    const sideItems = [];\r\n    const dessertItems = [];\r\n    const beverageItems = [];\r\n\r\n    useEffect(() => {\r\n        if (!sessionStorage.getItem(\"cart\")) {\r\n            sessionStorage.setItem(\"cart\", \"{}\");\r\n        }\r\n        if (!sessionStorage.getItem(\"total\")) {\r\n            sessionStorage.setItem(\"total\", \"0.00\");\r\n        }\r\n    }, []);\r\n\r\n    if (items != null) {\r\n        items.forEach((item) => {\r\n            if (item.category === \"Appetizer\") {\r\n                appetizerItems.push(<MenuItem name={item.name} description={item.description} price={item.price}\r\n                                              key={item.uuid}/>);\r\n            } else if (item.category === \"Entree\") {\r\n                entreeItems.push(<MenuItem name={item.name} description={item.description} price = {item.price} key={item.uuid}/>);\r\n            } else if (item.category === \"Side\") {\r\n                sideItems.push(<MenuItem name={item.name} description={item.description} price = {item.price} key={item.uuid}/>);\r\n            } else if (item.category === \"Dessert\") {\r\n                dessertItems.push(<MenuItem name={item.name} description={item.description} price = {item.price} key={item.uuid}/>);\r\n            } else if (item.category === \"Beverage\") {\r\n                beverageItems.push(<MenuItem name={item.name} description={item.description} price = {item.price} key={item.uuid}/>);\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Container style={{'padding':'50px'}}>\r\n            <h1 class=\"text-center\">Menu</h1>\r\n            <br></br>\r\n            <h2>Appetizers</h2>\r\n            {\r\n                (items != null) ? appetizerItems :\r\n                <div style={{'width': '100%', 'textAlign': 'center'}}>\r\n                    <img src={loading} style={{'width': '20px'}} alt='loading...'/>\r\n                </div>\r\n            }\r\n            <br></br>\r\n            <h2>Entrees</h2>\r\n            {\r\n                (items != null) ? entreeItems :\r\n                <div style={{'width': '100%', 'textAlign': 'center'}}>\r\n                    <img src={loading} style={{'width': '20px'}} alt='loading...'/>\r\n                </div>\r\n            }\r\n            <br></br>\r\n            <h2>Sides</h2>\r\n            {\r\n                (items != null) ? sideItems :\r\n                <div style={{'width': '100%', 'textAlign': 'center'}}>\r\n                    <img src={loading} style={{'width': '20px'}} alt='loading...'/>\r\n                </div>\r\n            }\r\n            <br></br>\r\n            <h2>Desserts</h2>\r\n            {\r\n                (items != null) ? dessertItems :\r\n                <div style={{'width': '100%', 'textAlign': 'center'}}>\r\n                    <img src={loading} style={{'width': '20px'}} alt='loading...'/>\r\n                </div>\r\n            }\r\n            <br></br>\r\n            <h2>Beverages</h2>\r\n            {\r\n                (items != null) ? beverageItems :\r\n                <div style={{'width': '100%', 'textAlign': 'center'}}>\r\n                    <img src={loading} style={{'width': '20px'}} alt='loading...'/>\r\n                </div>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction CartItem(props) {\r\n\r\n    const { name, quantity, price, canDelete, hasQuantity } = props;\r\n    const element = <FontAwesomeIcon icon={faTrash} />\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Row style={{'width':'100%'}}>\r\n                        <Col sm={1} xs={2}>\r\n                            <Card.Title className=\"mb-2 text-muted\">\r\n                                { hasQuantity &&\r\n                                <Badge pill variant=\"dark\"> { quantity } </Badge> \r\n                                }\r\n                            </Card.Title>\r\n                        </Col>\r\n                        <Col sm = {8} xs={6}>\r\n                            <Card.Title>{name}</Card.Title>\r\n                        </Col>\r\n                        <Col sm = {2} xs={3}>\r\n                            <Card.Title className=\"mb-2 text-muted\"> { price }</Card.Title>\r\n                        </Col>\r\n                        <Col sm= {1} style={{\"paddingRight\":\"0px\"}} xs={1}>\r\n                            { canDelete && \r\n                            <Button variant={'outline-danger'} className={\"float-right\"}>{element}</Button> \r\n                            }\r\n                            {/* <Button variant={'outline-success'} className={\"float-right\"} style={{'marginTop':'7px'}}>+</Button>  */}\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CartItem;\r\n","import React from \"react\";\r\n\r\nimport CartItem from \"../components/CartItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n\r\nfunction Cart(props) {\r\n\r\n    const { items } = props;\r\n\r\n    let wholeCart = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n    let total = 0.0;\r\n    const cartItems = [];\r\n\r\n    if (wholeCart != null) {\r\n        items.forEach((item) => {\r\n            if (wholeCart[item.name] != null) {\r\n                cartItems.push(<CartItem hasQuantity name={item.name} quantity={wholeCart[item.name]} price={item.price} key={item.uuid}/>);\r\n                total += wholeCart[item.name] * item.price;\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Container style={{'padding':'50px'}}>\r\n            <h1 class=\"text-center\">Cart</h1>\r\n            <br></br>\r\n            { (cartItems.length !== 0) ? <div>{cartItems}<CartItem name={\"Total\"} price = {`$${total}`}/></div> :\r\n                <div style={{\"textAlign\":\"center\"}}>\r\n                    <p>You have nothing in your cart!!!</p>\r\n                </div>\r\n            }\r\n            {/*need to have total be something else --> not a cart item and need to add up total */}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction Checkout(props) {\r\n\r\n    const {onSubmit} = props;\r\n    return(\r\n        <Container>\r\n            <h1 class=\"text-center\">Checkout</h1>\r\n            <br></br>\r\n              <Alert variant=\"primary\">\r\n                Your total is ${props.totalPrice}\r\n              </Alert>\r\n            <Form>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name on Card</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Name\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"cardNum\">\r\n                    <Form.Label>Card Number</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Card Number\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"expire\">\r\n                    <Form.Label>Expiry Date</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"MM/YY\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"code\">\r\n                    <Form.Label>Security Code</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"CVV\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\r\n                    Complete Payment\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Checkout;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nfunction Dining() {\r\n    return(\r\n        <Container style={{'padding':'100px'}}>\r\n            <h1 class=\"text-center\">\r\n                Dining in Progress...\r\n            </h1>\r\n            <br></br><br></br>\r\n            <Button variant=\"primary\" size=\"lg\" block>\r\n                Request Refill\r\n            </Button>\r\n            <Button variant=\"secondary\" size=\"lg\" block>\r\n                Request Waiter\r\n            </Button>\r\n            <Button variant=\"primary\" size=\"lg\" block>\r\n                Order More\r\n            </Button>\r\n            <Button variant=\"secondary\" size=\"lg\" block>\r\n                Leave Restaurant\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Dining;\r\n\r\n","import React, { useState } from 'react'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Menu from './pages/Menu.js';\r\nimport Cart from './pages/Cart.js';\r\nimport Checkout from './pages/Checkout.js';\r\nimport Dining from './pages/Dining.js';\r\n\r\nfunction App(props) {\r\n\r\n    const { database, menuItems } = props;\r\n    const [ pageIndex, setPageIndex ] = useState(0);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"light\" expand=\"lg\" style={{'zIndex': '2'}}>\r\n                <Navbar.Brand href=\"#home\">Welcome to Olive Garden!</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls='basic-navbar-nav'/>\r\n                <Navbar.Collapse id='basic-navbar-nav'>\r\n                    <Nav className='mr-auto'>\r\n                        <Nav.Link href={\"#\"} onClick={() => {setPageIndex(1)}}>View Cart</Nav.Link>\r\n                        <Nav.Link href={'#'} onClick={() => {setPageIndex(0)}}>View Menu</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            { pageIndex === 0 ? <Menu items = {menuItems} /> : <></>}\r\n            { pageIndex === 1 ? <Cart items = {menuItems} /> : <></>}\r\n            { pageIndex === 2 ? <Checkout onSubmit = {\r\n                () => {\r\n                    setPageIndex(3);\r\n                    const wholeCart = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n                    let data = [];\r\n                    menuItems.forEach((item) => {\r\n                        if (wholeCart[item.name] != null) {\r\n                            data.push(JSON.stringify({\"name\":item.name, \"count\":wholeCart[item.name], \"comments\": \"\"}));\r\n                        }\r\n                    });\r\n                    let currentURL = window.location.search.substring(1);\r\n                    database.collection('restaurants').doc('rFxSt5fTT3Kp4NphAomx').collection('tables').doc(currentURL).set({\r\n                        orders: data,\r\n                        status: 'Order Received'\r\n                    })\r\n                }\r\n            } totalPrice = {sessionStorage.getItem(\"total\")}/> : <></>}\r\n            { pageIndex === 3 ? <Dining /> : <></>}\r\n            <Navbar fixed=\"bottom\" bg={\"light\"} expand={\"lg\"} style={{\"padding\":\"0px\", 'width':'100%'}}>\r\n                <Row className={\"justify-content-center\"} style={{\"width\":\"100%\"}}>\r\n                    <Col style={{\"paddingRight\":\"0px\"}}>\r\n                        { (pageIndex < 2) ? <Button size={'lg'} variant={\"success\"} style={{\"width\":\"105%\"}} onClick={() => {\r\n                            setPageIndex(pageIndex + 1);\r\n                        }}> Checkout </Button> : <></>}\r\n                    </Col>\r\n                </Row>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default class MenuItemObject {\r\n    constructor(name, description, uuid, price, category) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.uuid = uuid;\r\n        this.price = price;\r\n        this.category = category;\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport firebase from 'firebase';\r\nimport MenuItemObject from \"../models/MenuItemObject\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAUrlthvN7-mzjShK52AfthkX6yepCuwgk\",\r\n    authDomain: \"hackgt2020-5847e.firebaseapp.com\",\r\n    databaseURL: \"https://hackgt2020-5847e.firebaseio.com\",\r\n    projectId: \"hackgt2020-5847e\",\r\n    storageBucket: \"hackgt2020-5847e.appspot.com\",\r\n    messagingSenderId: \"838591600721\",\r\n    appId: \"1:838591600721:web:829023369df328b7a18070\"\r\n};\r\n\r\nfunction Firebase(props) {\r\n    const { children } = props;\r\n    const [ firestore, setFirestore ] = useState(null);\r\n    const [ menuItems, setMenuItems ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let menuItemsArray = [];\r\n        firebase.initializeApp(firebaseConfig);\r\n        const database = firebase.firestore();\r\n        setFirestore(database);\r\n        database.collection('restaurants').get().then(function(querySnapshot) {\r\n            querySnapshot.forEach(function(doc) {\r\n                let restaurantId = doc.id;\r\n                database.collection('restaurants').doc(doc.id).collection('menuItems').get().then(function(querySnapshot2) {\r\n                    querySnapshot2.forEach(function(doc2) {\r\n                        let description = doc2.get('Description');\r\n                        let category = doc2.get('Category');\r\n                        let name = doc2.get('Name');\r\n                        let uuid = doc2.id;\r\n                        let price = doc2.get('Price');\r\n                        let currentMenuItem = new MenuItemObject(name, description, uuid, price, category);\r\n                        menuItemsArray.push(currentMenuItem);\r\n                    });\r\n                    setMenuItems(menuItemsArray);\r\n                });\r\n            })\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting documents: \", error);\r\n        });\r\n    }, []);\r\n\r\n    const childrenWithProps = React.Children.map(children, child => {\r\n        // checking isValidElement is the safe way and avoids a typescript error too\r\n        const properties = { database: firestore, menuItems: menuItems };\r\n        if (React.isValidElement(child)) {\r\n            return React.cloneElement(child, properties);\r\n        }\r\n        return child;\r\n    });\r\n\r\n    return (\r\n        <div> { childrenWithProps } </div>\r\n    );\r\n}\r\n\r\nexport default Firebase;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Cart from './pages/Cart';\r\nimport Checkout from './pages/Checkout'\r\nimport Dining from './pages/Dining'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Firebase from \"./components/Firebase\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Firebase>\r\n        <App />\r\n      </Firebase>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}