{"version":3,"sources":["static/assets/loading_gif.gif","helpers/NCRRequest.js","helpers/NCRHelpers.js","pages/AddMenuItem.js","components/RestaurantNavbar.js","components/OrderItem.js","pages/ActiveOrders.js","pages/DashboardItem.js","pages/Dashboard.js","App.js","serviceWorker.js","components/Firebase.js","index.js"],"names":["module","exports","CryptoJS","require","environment","convertVariables","templateContent","regexPattern","convertedContent","matchedVar","RegExp","exec","variableReplacement","variableName","variableValue","replace","calculateSignature","req","date","Date","toGMTString","key","nonce","toISOString","slice","uniqueKey","sc","request","requestPath","url","trim","method","headers","filter","p","length","join","signableContent","hmac","HmacSHA512","enc","Base64","stringify","NCRRequest","path","body","varpath","append","requestOptions","redirect","mode","Request","signature","sharedKey","console","log","Promise","resolve","reject","fetch","then","response","catch","error","createCategoryItem","name","category","description","catIdx","indexOf","myHeaders","Headers","max","id","Math","floor","random","res","err","AddMenuItem","props","database","useState","itemName","setItemName","setPrice","setCategory","setDescription","className","Container","Form","Group","controlId","Label","Control","placeholder","onChange","event","target","value","InputGroup","Prepend","Text","type","aria-describedby","as","rows","Button","size","variant","block","onClick","json","data","JSON","RestaurantNavbar","updatePage","Navbar","bg","expand","style","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","OrderItem","quantity","notes","ListGroup","Item","Row","Col","xs","Badge","pill","ActiveOrders","currentTable","setCurrentTable","orders","setOrders","status","setStatus","tableHandler","tableNum","collection","doc","get","exists","orderItems","forEach","order","orderJSON","parse","dishName","dishCount","count","dishComments","comments","push","Card","Body","src","loading","alt","nextStatus","set","document","location","DashboardItem","total","days","times","Title","Dashboard","App","pageIndex","setPageIndex","i","Boolean","window","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","children","firestore","setFirestore","useEffect","firebase","initializeApp","childrenWithProps","React","Children","map","child","properties","isValidElement","cloneElement","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,yC,qbCArCC,EAAWC,EAAQ,KAErBC,EAAc,CACd,gBAAiB,uCACjB,eAAgB,4CAChB,mBAAoB,gDACpB,gBAAiB,wDACjB,cAAe,kFACf,cAAe,2CACf,wBAAyB,qDACzB,kBAAkB,wEAClB,gCAAgC,kEAChC,kBAAkB,iDAClB,mBAAoB,mCACpB,cAAe,mCACf,iBAAkB,mCAClB,iBAAkB,mCAClB,cAAe,KAKbC,EAAmB,SAASC,GAI9B,IAHA,IAAMC,EAAe,eACjBC,EAAmBF,EACnBG,EAAa,IAAIC,OAAOH,GAAcI,KAAKH,GACzB,OAAfC,GAAqB,CACxB,IAAMG,EAAsBH,EAAW,GACjCI,EAAeJ,EAAW,GAC1BK,EAAgBV,EAAYS,GAClCL,EAAmBA,EAAiBO,QAAQH,EAAqBE,GACjEL,EAAa,IAAIC,OAAOH,GAAcI,KAAKH,GAE/C,OAAOA,GAuBLQ,EAAqB,SAASC,GAChC,IAAMC,EAAO,IAAIC,KACjBf,EAAW,KAAWc,EAAKE,cAC3B,IAAMC,EATQ,SAASH,GACvB,IAAMI,EAAQJ,EAAKK,cAAcC,MAAM,EAAG,IAAM,QAChD,OAAOpB,EAAY,kBAAoBkB,EAO3BG,CAAUP,GAChBQ,EAvBc,SAASC,GAC7B,IAAMC,EAAcvB,EAAiBsB,EAAQE,IAAIC,QAAQf,QAAQ,uBAAwB,KAQzF,MAPe,CACXY,EAAQI,OACRH,EACAD,EAAQK,QAAQ,gBAChBL,EAAQK,QAAQ,eAChB3B,EAAiBsB,EAAQK,QAAQ,sBAEvBC,QAAO,SAAAC,GAAC,OAAIA,GAAKA,EAAEC,OAAS,KAAGC,KAAK,MAcvCC,CAAgBpB,GACrBqB,EAAOpC,EAASqC,WAAWb,EAAIL,GACrC,OAAOnB,EAASsC,IAAIC,OAAOC,UAAUJ,IAoC1BK,MAjCf,SAAoBC,EAAMC,EAAMb,EAASD,GACrC,IAAMb,EAAO,IAAIC,KACX2B,EAAUzC,EAAiBuC,GACjCZ,EAAQe,OAAO,OAAQ7B,EAAKE,eAC5BY,EAAQe,OAAO,SAAUD,GAEzB,IAAIE,EAAiB,CACjBjB,OAAQA,EACRC,QAASA,EACTa,KAAMxC,EAAiBwC,GACvBI,SAAU,SACVpB,IAAKiB,EACLI,KAAM,QAGNjC,EAAM,IAAIkC,QAAQH,EAAenB,IAAKmB,GAGpCI,EAAYpC,EAAmBC,GAC/BoC,EAAYjD,EAAY,kBAM9B,OALAA,EAAY,kBAAZ,oBAA6CiD,EAA7C,YAA0DD,GAE1DE,QAAQC,IAAInD,EAAY,mBACxB4C,EAAehB,QAAQe,OAAO,gBAAiB3C,EAAY,mBAEpD,IAAIoD,SAAQ,SAACC,EAASC,GACzBC,MAAM1C,GACD2C,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,MACzBC,OAAM,SAAAC,GAAK,OAAIL,EAAOK,UCvF5B,SAASC,EAAmBC,EAAMC,EAAUC,GAE/C,IAAMC,EAAS,CAAC,GAAG,YAAa,SAAU,OAAQ,SAAU,YAAYC,QAAQH,GAG1ErB,EAAO,6EAC4BuB,EAD5B,kEAEkCD,EAFlC,qEAG+CF,EAH/C,2CAFM,CAAC,GAAG,aAAc,UAAW,QAAS,UAAW,aAMhCG,GAJvB,qEAOTE,EAAY,IAAIC,QACpBD,EAAUvB,OAAO,eAAgB,oBACjCuB,EAAUvB,OAAO,mBAAoB,oCACrCuB,EAAUvB,OAAO,sBAAuB,oCAExC,IArBkByB,EAqBZC,GArBYD,EAqBM,IApBjBE,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMH,KAsB7C,OAAO,IAAIhB,SAAQ,SAACC,EAASC,GACzBf,EAAW,+BAAiC8B,EAAI5B,EAAMyB,EAAW,OAAOV,MAAK,SAACC,GAC1EJ,EAAQ,CAACoB,IAAKhB,EAAUY,GAAIA,OAC7BX,OAAM,SAACgB,GACNpB,EAAOoB,SCkFFC,MAhGjB,SAAqBC,GACIA,EAAbC,SADiB,IAAD,EAGUC,mBAAS,IAHnB,mBAGhBC,EAHgB,KAGNC,EAHM,OAIGF,mBAAS,GAJZ,mBAITG,GAJS,aAKUH,mBAAS,aALnB,mBAKhBhB,EALgB,KAKNoB,EALM,OAMgBJ,mBAAS,IANzB,mBAMhBf,EANgB,KAMHoB,EANG,KAwBxB,OACI,yBAAKC,UAAU,OACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,0BAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,YAAY,YAAYC,SAtB5B,SAACC,GAC3Bb,EAAYa,EAAMC,OAAOC,WAuBb,kBAACT,EAAA,EAAKC,MAAN,CAAaC,UAAU,0BACnB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACO,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWC,QAAZ,KACI,kBAACD,EAAA,EAAWE,KAAZ,CAAiB7B,GAAG,qBAApB,MAEJ,kBAACiB,EAAA,EAAKI,QAAN,CACIS,KAAK,SACLR,YAAY,OACZS,mBAAiB,oBACjBvC,KAAK,QACL+B,SA/BD,SAACC,GACxBZ,EAASY,EAAMC,OAAOC,YAkCV,kBAACT,EAAA,EAAKC,MAAN,CAAYC,UAAU,2BAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcW,GAAG,SAAST,SAjChB,SAACC,GAC3BX,EAAYW,EAAMC,OAAOC,SAiCL,6CACA,0CACA,wCACA,2CACA,8CAGR,kBAACT,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAClB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcW,GAAG,WAAWC,KAAK,IAAIV,SAvCxB,SAACC,GAC9BV,EAAeU,EAAMC,OAAOC,WAwChB,kBAACQ,EAAA,EAAD,CAAQC,KAAQ,KAAMC,QAAQ,UAAUN,KAAK,GAAGO,OAAK,EAACC,QAAS,WAK3D/C,EAJemB,EAEIjB,EACGC,GACsCP,MAAK,SAACC,GAC9DA,EAASgB,IAAImC,OAAOpD,MAAK,SAACqD,GACtB3D,QAAQC,IAAI2D,KAAKxE,UAAUuE,UAehCnD,OAAM,SAACC,GACNT,QAAQS,MAAMA,QAvBtB,c,gBCpDLoD,MAnBf,SAA0BnC,GAAQ,IAEtBoC,EAAepC,EAAfoC,WAER,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKC,MAAO,CAAC,OAAU,MAC7C,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SAAnB,gBACA,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBpD,GAAG,oBAChB,kBAACqD,EAAA,EAAD,CAAKtC,UAAU,WACX,kBAACsC,EAAA,EAAIC,KAAL,CAAUL,KAAM,IAAKX,QAAS,WAAOK,EAAW,KAAhD,eACA,kBAACU,EAAA,EAAIC,KAAL,CAAUL,KAAK,IAAIX,QAAS,WAAOK,EAAW,KAA9C,UACA,kBAACU,EAAA,EAAIC,KAAL,CAAUL,KAAK,IAAIX,QAAS,WAAOK,EAAW,KAA9C,qB,qECULY,MApBf,SAAmBhD,GAAQ,IAEhBf,EAAyBe,EAAzBf,KAAMgE,EAAmBjD,EAAnBiD,SAAUC,EAASlD,EAATkD,MAEvB,OACI,kBAACC,EAAA,EAAUC,KAAX,KACI,kBAACC,EAAA,EAAD,CAAKb,MAAO,CAAC,UAAY,SACrB,kBAACc,EAAA,EAAD,CAAKC,GAAI,GAAG,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAAC5B,QAAQ,QAASoB,IACzC,kBAACK,EAAA,EAAD,CAAKC,GAAI,IAAI,4BAAMtE,KAGnBiE,GACA,kBAACG,EAAA,EAAD,CAAKb,MAAO,CAAC,UAAa,SACtB,kBAACc,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACD,EAAA,EAAD,CAAKC,GAAI,IAAI,+BAAKL,EAAL,SC4HlBQ,MAjIf,SAAsB1D,GAAQ,IAElBC,EAAaD,EAAbC,SAFiB,EAKiBC,mBAAS,GAL1B,mBAKjByD,EALiB,KAKHC,EALG,OAMK1D,mBAAS,IANd,mBAMjB2D,EANiB,KAMTC,EANS,OAOK5D,mBAAS,iBAPd,mBAOjB6D,EAPiB,KAOTC,EAPS,KASnBC,EAAe,SAACC,GAClBN,EAAgBM,GAEHjE,EAASkE,WAAW,eAAeC,IAAI,wBAAwBD,WAAW,UAAUC,IAAI,QAAQF,GAEtGG,MAAMzF,MAAK,SAASwF,GACnBA,EAAIE,QACJR,EAAUM,EAAInC,OAAO4B,QACrBG,EAAUI,EAAInC,OAAO8B,SAGrBzF,QAAQC,IAAI,wBAEjBO,OAAM,SAASC,GACdT,QAAQC,IAAI,0BAA2BQ,MAG3CT,QAAQC,IAAI,iBAAkBoF,GAC9BrF,QAAQC,IAAI,WAAYsF,GACxBvF,QAAQC,IAAI,WAAYwF,IAGtBQ,EAAa,GAWnB,OAVc,MAAVV,GACAA,EAAOW,SAAQ,SAACC,GACZ,IAAIC,EAAYxC,KAAKyC,MAAMF,GACvBG,EAAWF,EAAUzF,KACrB4F,EAAYH,EAAUI,MACtBC,EAAeL,EAAUM,SAC7BT,EAAWU,KAAK,kBAAC,EAAD,CAAWhG,KAAM2F,EAAU3B,SAAU4B,EAAW3B,MAAO6B,QAK3E,yBAAKvE,UAAW,iBACZ,yBAAKA,UAAY,cACb,yBAAKA,UAAY,UACb,kBAACC,EAAA,EAAD,CAAW+B,MAAO,CAAC,OAAU,SACzB,kBAACc,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,CAAKb,MAAO,CAAC,OAAU,QACnB,2BAAG,gCAGX,uBAAGT,QAAS,WAAOkC,EAAa,KAC5B,kBAACiB,EAAA,EAAD,CAAM1C,MAAO,CAAC,OAAU,QACpB,kBAAC0C,EAAA,EAAKC,KAAN,kBAGR,kBAAC7B,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,CAAKb,MAAO,CAAC,OAAU,QACnB,2BAAG,gCAGX,uBAAGT,QAAS,WAAOkC,EAAa,KAC5B,kBAACiB,EAAA,EAAD,CAAM1C,MAAO,CAAC,OAAU,QACpB,kBAAC0C,EAAA,EAAKC,KAAN,kBAGR,kBAAC7B,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,CAAKb,MAAO,CAAC,OAAU,QACnB,2BAAG,gCAGX,uBAAGT,QAAS,WAAOkC,EAAa,KAC5B,kBAACiB,EAAA,EAAD,CAAM1C,MAAO,CAAC,OAAU,QACpB,kBAAC0C,EAAA,EAAKC,KAAN,qBAMpB,yBAAK3E,UAAW,eACZ,kBAAC6C,EAAA,EAAD,CAAK7C,UAAW,yBAA0BgC,MAAO,CAAC,UAAY,SAC1D,kBAACc,EAAA,EAAD,KACI,wBAAId,MAAO,CAAC,MAAQ,SAApB,SAAoCmB,GACpC,kBAAClD,EAAA,EAAD,CAAW+B,MAAO,CAAC,QAAU,QAEpBqB,GAAU,GAAMU,EACjB,yBAAK/B,MAAO,CAAC,MAAS,OAAQ,UAAa,WACvC,yBAAK4C,IAAKC,IAAS7C,MAAO,CAAC,MAAS,QAAS8C,IAAI,mBAMrE,kBAACjC,EAAA,EAAD,CAAK7C,UAAW,oCAAqCgC,MAAO,CAAC,MAAQ,QACjE,kBAACc,EAAA,EAAD,CAAKd,MAAO,CAAC,aAAe,QACxB,kBAACb,EAAA,EAAD,CAAQC,KAAM,KAAMC,QAAS,UAAWW,MAAO,CAAC,MAAQ,QAAST,QAAS,WACtE,IAAIwD,EAAa,GACH,iBAAVxB,EACAwB,EAAa,iBACI,kBAAVxB,EACPwB,EAAa,aACI,cAAVxB,EACPwB,EAAa,gBACI,iBAAVxB,EACPwB,EAAa,mCACI,oCAAVxB,IACPwB,EAAa,gBACbtF,EAASkE,WAAW,eAAeC,IAAI,wBAAwBD,WAAW,UAAUC,IAAI,QAAQT,GAAc6B,IAAI,CAC9G3B,OAAQ,GACRE,OAAQ,kBAEXnF,MAAK,WACF6G,SAASC,SAAW,QAG5B1B,EAAUuB,GACVtF,EAASkE,WAAW,eAAeC,IAAI,wBAAwBD,WAAW,UAAUC,IAAI,QAAQT,GAAc6B,IAAI,CAC9G3B,OAAQA,EACRE,OAAQwB,MAEZxB,QC5Gb4B,MAxBf,SAAuB3F,GAAQ,IAEnB4F,EAAuB5F,EAAvB4F,MAAOC,EAAgB7F,EAAhB6F,KAAMC,EAAU9F,EAAV8F,MAErB,OACI,oCACI,kBAACZ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACA,kBAACD,EAAA,EAAKa,MAAN,kBACI,kBAAC1C,EAAA,EAAD,CAAKb,MAAO,CAAC,MAAQ,SACjB,kBAACc,EAAA,EAAD,KACI,kBAAC4B,EAAA,EAAK5D,KAAN,CAAWd,UAAU,mBAArB,uBAA6DoF,EAA7D,mCAEJ,kBAACtC,EAAA,EAAD,CAAKd,MAAO,CAAC,aAAe,QACxB,kBAAC0C,EAAA,EAAK5D,KAAN,CAAWd,UAAU,mBAArB,IAAyCqF,EAAzC,qCACA,kBAACX,EAAA,EAAK5D,KAAN,CAAWd,UAAU,mBAArB,IAAyCsF,EAAzC,0CCFbE,MARf,WACI,OACI,kBAACvF,EAAA,EAAD,CAAW+B,MAAO,CAAC,QAAU,QACzB,kBAAC,EAAD,CAAeoD,MAAO,KAAMC,KAAM,sBAAwBC,MAAO,aCU9DG,MAhBf,SAAajG,GAAQ,IACTC,EAAaD,EAAbC,SADQ,EAEkBC,mBAAS,GAF3B,mBAETgG,EAFS,KAEEC,EAFF,KAIhB,OACI,yBAAK3F,UAAU,OACX,kBAAC,EAAD,CAAkB4B,WAAY,SAACgE,GAC3BD,EAAaC,MAED,IAAdF,EAAkB,kBAAC,EAAD,CAAcjG,SAAaA,IAAe,qCAC9C,IAAdiG,EAAkB,kBAAC,EAAD,CAAajG,SAAaA,IAAe,qCAC7C,IAAdiG,EAAkB,kBAAC,EAAD,MAAgB,uCCN5BG,QACW,cAA7BC,OAAOZ,SAASa,UAEe,UAA7BD,OAAOZ,SAASa,UAEhBD,OAAOZ,SAASa,SAASC,MACvB,2D,4BCdAC,EAAiB,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,6CA2BIC,MAxBf,SAAkBjH,GAAQ,IACdkH,EAAalH,EAAbkH,SADa,EAEehH,mBAAS,MAFxB,mBAEbiH,EAFa,KAEFC,EAFE,KAIrBC,qBAAU,WACNC,IAASC,cAAcd,GACvB,IAAMxG,EAAWqH,IAASH,YAC1BC,EAAanH,KACd,IAEH,IAAMuH,EAAoBC,IAAMC,SAASC,IAAIT,GAAU,SAAAU,GAEnD,IAAMC,EAAa,CAAE5H,SAAUkH,GAC/B,OAAIM,IAAMK,eAAeF,GACdH,IAAMM,aAAaH,EAAOC,GAE9BD,KAGX,OACI,iCAAQJ,EAAR,MC1BRQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJzC,SAAS0C,eAAe,SFqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1J,MAAK,SAAA2J,GACJA,EAAaC,gBAEd1J,OAAM,SAAAC,GACLT,QAAQS,MAAMA,EAAM0J,c","file":"static/js/main.2b1c957a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading_gif.d452daac.gif\";","const CryptoJS = require(\"crypto-js\");\n\nlet environment = {\n    \"cors-anywhere\": \"https://cors-anywhere.herokuapp.com/\",\n    \"site-service\": \"https://gateway-staging.ncrcloud.com/site\",\n    \"security-service\": \"https://gateway-staging.ncrcloud.com/security\",\n    \"order-service\": \"https://gateway-staging.ncrcloud.com/order/3/orders/1\",\n    \"tdm-service\": \"https://gateway-staging.ncrcloud.com/transaction-document/transaction-documents\",\n    \"cdm-service\": \"https://gateway-staging.ncrcloud.com/cdm\",\n    \"catalog-items-service\": \"https://gateway-staging.ncrcloud.com/catalog/items\",\n    \"selling-service\":\"https://gateway-staging.ncrcloud.com/emerald/selling-service/v1/carts\",\n    \"selling-configuration-service\":\"https://gateway-staging.ncrcloud.com/emerald/selling-service/c1\",\n    \"catalog-service\":\"https://gateway-staging.ncrcloud.com/catalog/2\",\n    \"bsp-organization\": \"f67a5f37952346ed8f72995919b687e3\",\n    \"bsp-site-id\": \"766adbd7a7e549938e28c6ac5ac66565\",\n    \"bsp-shared-key\": \"1fc0b35e4ce7470db0af5de63aa780ae\",\n    \"bsp-secret-key\": \"b6e472097ba34186afd9c11d7ca24c0b\",\n    \"version-num\": \"3\",\n};\n\n// Ensures any content has variables substituted; supports recursive\n// resolution (environment variable that references environment/global variables)\nconst convertVariables = function(templateContent) {\n    const regexPattern = /({{(.*?)}})/g;\n    let convertedContent = templateContent;\n    let matchedVar = new RegExp(regexPattern).exec(convertedContent);\n    while (matchedVar !== null) {\n        const variableReplacement = matchedVar[1];\n        const variableName = matchedVar[2];\n        const variableValue = environment[variableName];\n        convertedContent = convertedContent.replace(variableReplacement, variableValue);\n        matchedVar = new RegExp(regexPattern).exec(convertedContent);\n    }\n    return convertedContent;\n}\n\n// Extracts the signable content from the request\nconst signableContent = function(request) {\n    const requestPath = convertVariables(request.url.trim()).replace(/^https?:\\/\\/[^\\/]+\\//, '/');\n    const params = [\n        request.method,\n        requestPath,\n        request.headers['content-type'],\n        request.headers['content-md5'],\n        convertVariables(request.headers['nep-organization'])\n    ];\n    return params.filter(p => p && p.length > 0).join('\\n');\n}\n\n// Generates a unique date-based signing key\nconst uniqueKey = function(date) {\n    const nonce = date.toISOString().slice(0, 19) + '.000Z';\n    return environment['bsp-secret-key'] + nonce;\n};\n\n// Calculates the HMAC signature\nconst calculateSignature = function(req) {\n    const date = new Date();\n    environment['date'] = date.toGMTString();\n    const key = uniqueKey(date);\n    const sc = signableContent(req);\n    const hmac = CryptoJS.HmacSHA512(sc, key);\n    return CryptoJS.enc.Base64.stringify(hmac);\n};\n\nfunction NCRRequest(path, body, headers, method) {\n    const date = new Date();\n    const varpath = convertVariables(path);\n    headers.append(\"Date\", date.toGMTString());\n    headers.append(\"Origin\", varpath);\n\n    let requestOptions = {\n        method: method,\n        headers: headers,\n        body: convertVariables(body),\n        redirect: 'follow',\n        url: varpath,\n        mode: 'cors',\n    };\n\n    let req = new Request(requestOptions.url, requestOptions);\n\n    // Stores the generated HMAC signature under the access key\n    const signature = calculateSignature(req);\n    const sharedKey = environment['bsp-shared-key'];\n    environment['bsp-access-key'] = `AccessKey ${sharedKey}:${signature}`;\n\n    console.log(environment['bsp-access-key']);\n    requestOptions.headers.append(\"Authorization\", environment['bsp-access-key']);\n\n    return new Promise((resolve, reject) => {\n        fetch(req)\n            .then(response => resolve(response))\n            .catch(error => reject(error));\n    });\n\n}\n\nexport default NCRRequest;\n","import NCRRequest from \"./NCRRequest\";\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nexport function createCategoryItem(name, category, description) {\n\n    const catIdx = [\"\",\"Appetizer\", \"Entree\", \"Side\", \"Desert\", \"Beverage\"].indexOf(category);\n    const categories = [\"\",\"Appetizers\", \"Entrees\", \"Sides\", \"Deserts\", \"Beverages\"];\n\n    const body = \"{\\\"version\\\": {{version-num}},\\\"packageIdentifiers\\\":\" +\n        \" [{\\\"type\\\": \\\"1\\\",\\\"value\\\": \\\"\" + catIdx + \"\\\"},\\\"longDescription\\\": {\\\"values\\\":\" +\n        \" [{\\\"locale\\\": \\\"en-US\\\",\\\"value\\\": \\\"\" + description + \"\\\"}]},\\\"shortDescription\\\":\" +\n        \" {\\\"values\\\": [{\\\"locale\\\": \\\"en-US\\\",\\\"value\\\": \\\"\" + name + \"\\\"}]},\\\"merchandiseCategory\\\":\" +\n        \" {\\\"nodeId\\\": \\\"\" + categories[catIdx] + \"\\\"},\\\"status\\\": \\\"ACTIVE\\\",\\\"departmentId\\\":\" +\n        \" \\\"01\\\",\\\"nonMerchandise\\\": true}\";\n\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"nep-organization\", \"f67a5f37952346ed8f72995919b687e3\");\n    myHeaders.append(\"nep-enterprise-unit\", \"766adbd7a7e549938e28c6ac5ac66565\");\n\n    const id = getRandomInt(100000);\n\n    return new Promise((resolve, reject) => {\n        NCRRequest(\"{{catalog-service}}/items/3/\" + id, body, myHeaders, \"PUT\").then((response) => {\n            resolve({res: response, id: id});\n        }).catch((err) => {\n            reject(err);\n        });\n    });\n};\n","import React, { useState } from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { createCategoryItem } from '../helpers/NCRHelpers.js';\n\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n}\n\nfunction AddMenuItem(props) {\n    const { database } = props\n\n    const [ itemName, setItemName ] = useState(\"\");\n    const [ price, setPrice] = useState(0);\n    const [ category, setCategory ] = useState(\"Breakfast\");\n    const [ description, setDescription ] = useState(\"\");\n\n    const menuItemChangeHandler = (event) => {\n        setItemName(event.target.value);\n    }\n\n    const priceChangeHandler = (event) => {\n        setPrice(event.target.value);\n    }\n\n    const categoryChangeHandler = (event) => {\n        setCategory(event.target.value);\n    }\n\n    const descriptionChangeHandler = (event) => {\n        setDescription(event.target.value);\n    }\n\n    return (\n        <div className=\"App\">\n            <Container>\n                <Form>\n                    <Form.Group controlId=\"menuForm.ControlInput1\">\n                        <Form.Label>Menu Item</Form.Label>\n                        <Form.Control placeholder='10\" Pizza' onChange={menuItemChangeHandler}/>\n                    </Form.Group>\n                    <Form.Group  controlId=\"menuForm.ControlInput2\">\n                        <Form.Label>Price</Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"5.00\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                name=\"price\"\n                                onChange={priceChangeHandler}\n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    <Form.Group controlId=\"menuForm.ControlSelect1\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control as=\"select\" onChange={categoryChangeHandler}>\n                            <option>Appetizer</option>\n                            <option>Entree</option>\n                            <option>Side</option>\n                            <option>Dessert</option>\n                            <option>Beverage</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"menuForm.ControlTextarea1\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"3\" onChange={descriptionChangeHandler}/>\n                    </Form.Group>\n                    <Button size = {'lg'} variant=\"primary\" type=\"\" block onClick={() => {\n                        let tempName = itemName;\n                        let tempPrice = price;\n                        let tempCategory = category;\n                        let tempDescription = description;\n                        createCategoryItem(tempName, tempCategory, tempDescription).then((response) => {\n                            response.res.json().then((data) => {\n                                console.log(JSON.stringify(data));\n                            });\n                            // database.collection('restaurants').doc('rFxSt5fTT3Kp4NphAomx').collection('menuItems').doc(uuidv4()).set({\n                            //     Category: tempCategory,\n                            //     Name: tempName,\n                            //     Price: tempPrice,\n                            //     Description: tempDescription,\n                            //     NCR_ID: response.id,\n                            // })\n                            //     .then(function() {\n                            //         document.location = \"/\";\n                            //     })\n                            //     .catch(function(err) {\n                            //         console.error(err);\n                            // })\n                        }).catch((error) => {\n                            console.error(error);\n                        })\n\n                    }}>\n                        Submit\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    );\n  }\n\n  export default AddMenuItem;\n","import React from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction RestaurantNavbar(props) {\n\n    const { updatePage } = props;\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" style={{'zIndex': '2'}}>\n            <Navbar.Brand href=\"#home\">Olive Garden</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href={\"#\"} onClick={() => {updatePage(2);}}> Dashboard </Nav.Link>\n                    <Nav.Link href=\"#\" onClick={() => {updatePage(0);}}>Orders</Nav.Link>\n                    <Nav.Link href=\"#\" onClick={() => {updatePage(1);}}>Add Menu Item</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default RestaurantNavbar;\n","import React from 'react';\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\n\nfunction OrderItem(props) {\n\n    const {name, quantity, notes} = props;\n\n    return (\n        <ListGroup.Item>\n            <Row style={{\"textAlign\":\"left\"}}>\n                <Col xs={1}><Badge pill variant=\"dark\">{ quantity }</Badge></Col>\n                <Col xs={11}><h5>{ name }</h5></Col>\n            </Row>\n            {\n                notes &&\n                <Row style={{\"textAlign\": \"left\"}}>\n                    <Col xs={1}/>\n                    <Col xs={11}><p> {notes} </p></Col>\n                </Row>\n            }\n        </ListGroup.Item>\n    );\n}\nexport default OrderItem;\n","import React, { useState } from 'react';\n\nimport '../static/css/ActiveOrders.css';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport loading from \"../static/assets/loading_gif.gif\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\n\nimport OrderItem from \"../components/OrderItem\";\n\n\n//page for viewing the active orders\nfunction ActiveOrders(props) {\n\n    const { database } = props\n\n\n    const [ currentTable, setCurrentTable ] = useState(1);\n    const [ orders, setOrders ] = useState([]);\n    const [ status, setStatus ] = useState(\"Order Pending\");\n\n    const tableHandler = (tableNum) => {\n        setCurrentTable(tableNum);\n\n        var docRef = database.collection('restaurants').doc(\"rFxSt5fTT3Kp4NphAomx\").collection('tables').doc('table'+tableNum);\n\n        docRef.get().then(function(doc) {\n            if (doc.exists) {\n                setOrders(doc.data().orders);\n                setStatus(doc.data().status);\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch(function(error) {\n            console.log(\"Error getting document:\", error);\n        });\n\n        console.log('CurrentTable: ', currentTable);\n        console.log('Orders: ', orders);\n        console.log('Status: ', status);\n    }\n\n    const orderItems = [];\n    if (orders != null) {\n        orders.forEach((order) => {\n            let orderJSON = JSON.parse(order);\n            let dishName = orderJSON.name;\n            let dishCount = orderJSON.count;\n            let dishComments = orderJSON.comments;\n            orderItems.push(<OrderItem name={dishName} quantity={dishCount} notes={dishComments}/>);\n        })\n    }\n\n    return (\n        <div className={\"active-orders\"}>\n            <div className = \"split left\">\n                <div className = \"tables\">\n                    <Container style={{'height': '100%'}}>\n                        <Col>\n                            <Row style={{'height': '80%'}}>\n                                <p><br></br></p>\n                            </Row>\n                        </Col>\n                        <a onClick={() => {tableHandler(1)}}>\n                            <Card style={{'height': '25%'}}>\n                                <Card.Body>TABLE 1</Card.Body>\n                            </Card>\n                        </a>\n                        <Col>\n                            <Row style={{'height': '80%'}}>\n                                <p><br></br></p>\n                            </Row>\n                        </Col>\n                        <a onClick={() => {tableHandler(2)}}>\n                            <Card style={{'height': '25%'}}>\n                                <Card.Body>TABLE 2</Card.Body>\n                            </Card>\n                        </a>\n                        <Col>\n                            <Row style={{'height': '80%'}}>\n                                <p><br></br></p>\n                            </Row>\n                        </Col>\n                        <a onClick={() => {tableHandler(3)}}>\n                            <Card style={{'height': '25%'}}>\n                                <Card.Body>TABLE 3</Card.Body>\n                            </Card>\n                        </a>\n                    </Container>\n                </div>\n            </div>\n            <div className={\"split right\"}>\n                <Row className={'justify-content-center'} style={{\"marginTop\":\"56px\"}}>\n                    <Col>\n                        <h1 style={{\"width\":\"100%\"}}>Table {currentTable}</h1>\n                        <Container style={{'padding':'0px'}}>\n                            {\n                                (orders != {}) ? orderItems :\n                                <div style={{'width': '100%', 'textAlign': 'center'}}>\n                                    <img src={loading} style={{'width': '20px'}} alt='loading...'/>\n                                </div>\n                            }\n                        </Container>\n                    </Col>\n                </Row>\n                <Row className={\"justify-content-center fix-bottom\"} style={{\"width\":\"32%\"}}>\n                    <Col style={{\"paddingRight\":\"0px\"}}>\n                        <Button size={'lg'} variant={\"success\"} style={{\"width\":\"100%\"}} onClick={() => {\n                            let nextStatus = \"\";\n                            if (status == \"Order Pending\") {\n                                nextStatus = \"Order Received\";\n                            } else if (status == \"Order Received\") {\n                                nextStatus = \"Food Ready\";\n                            } else if (status == \"Food Ready\") {\n                                nextStatus = \"Meal Finished\";\n                            } else if (status == \"Meal Finished\") {\n                                nextStatus = \"Table Sanitized - Press to Reset\";\n                            } else if (status == \"Table Sanitized - Press to Reset\") {\n                                nextStatus = \"Order Pending\";\n                                database.collection('restaurants').doc('rFxSt5fTT3Kp4NphAomx').collection('tables').doc('table'+currentTable).set({\n                                    orders: {},\n                                    status: \"Order Pending\"\n                                })\n                                .then(function() {\n                                    document.location = \"/\";\n                                })\n                            }\n                            setStatus(nextStatus);\n                            database.collection('restaurants').doc('rFxSt5fTT3Kp4NphAomx').collection('tables').doc('table'+currentTable).set({\n                                orders: orders,\n                                status: nextStatus\n                            })\n                        }}>{status}</Button>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    );\n}\n\nexport default ActiveOrders;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from \"react-bootstrap/Card\";\n\nfunction DashboardItem(props) {\n\n    const { total, days, times } = props;\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                <Card.Title>Dashboard</Card.Title>\n                    <Row style={{'width':'100%'}}>\n                        <Col>\n                            <Card.Text className=\"mb-2 text-muted\">Successfully served { total } parties within the past week.</Card.Text>\n                        </Col>\n                        <Col style={{\"paddingRight\":\"0px\"}}>\n                            <Card.Text className=\"mb-2 text-muted\"> {days} were the busiest days this week.</Card.Text>\n                            <Card.Text className=\"mb-2 text-muted\"> {times} was the busiest time this week.</Card.Text>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nexport default DashboardItem;\n","//dashboard for restaurant to track analytics and see patterns/trends they can use \n//for example, know which days busier and needs more staff \n//\"successfully served 34 parties within this week\" \n//Thursday and Friday evenings && 6-8 PM were the busiest times this week \n\nimport React from \"react\";\n\nimport DashboardItem from \"../pages/DashboardItem\";\nimport Container from \"react-bootstrap/Container\";\n\nfunction Dashboard() {\n    return(\n        <Container style={{'padding':'0px'}}>\n            <DashboardItem total={\"34\"} days={\"Thursday and Friday\"}  times={\"6-8 PM\"}/>\n        </Container>\n    );\n}\n\nexport default Dashboard;","import React, { useState } from 'react';\n\nimport AddMenuItem from \"./pages/AddMenuItem\";\nimport RestaurantNavbar from \"./components/RestaurantNavbar\";\nimport ActiveOrders from \"./pages/ActiveOrders\";\nimport Dashboard from './pages/Dashboard';\n\nfunction App(props) {\n    const { database } = props;\n    const [pageIndex, setPageIndex] = useState(0);\n\n    return (\n        <div className=\"App\">\n            <RestaurantNavbar updatePage={(i) => {\n                setPageIndex(i);\n            }}/>\n            { pageIndex === 0 ? <ActiveOrders database = { database }/> : <></>}\n            { pageIndex === 1 ? <AddMenuItem database = { database }/> : <></>}\n            { pageIndex === 2 ? <Dashboard /> : <></>}\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAUrlthvN7-mzjShK52AfthkX6yepCuwgk\",\n    authDomain: \"hackgt2020-5847e.firebaseapp.com\",\n    databaseURL: \"https://hackgt2020-5847e.firebaseio.com\",\n    projectId: \"hackgt2020-5847e\",\n    storageBucket: \"hackgt2020-5847e.appspot.com\",\n    messagingSenderId: \"838591600721\",\n    appId: \"1:838591600721:web:829023369df328b7a18070\"\n};\n\nfunction Firebase(props) {\n    const { children } = props;\n    const [ firestore, setFirestore ] = useState(null);\n\n    useEffect(() => {\n        firebase.initializeApp(firebaseConfig);\n        const database = firebase.firestore();\n        setFirestore(database);\n    }, []);\n\n    const childrenWithProps = React.Children.map(children, child => {\n        // checking isValidElement is the safe way and avoids a typescript error too\n        const properties = { database: firestore };\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, properties);\n        }\n        return child;\n    });\n\n    return (\n        <div> { childrenWithProps } </div>\n    );\n}\n\nexport default Firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Firebase from './components/Firebase';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Firebase>\n      <App/>\n    </Firebase>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}